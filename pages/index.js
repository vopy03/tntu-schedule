import Head from 'next/head'
import { useEffect, useState } from "react"
import Image from 'next/image'
import { Inter } from '@next/font/google'
import WeekItem from '@/components/Header/WeekItem'
import HButtons from '@/components/Header/HButtons'
import Schedule from '@/components/Schedule/Schedule'
// import gicons from '@/styles/gicons.css'

const inter = Inter({ subsets: ['latin'] })

// const d = new Date(Date.now()+(86400000)*2);
// const d = new Date();

export default function Home() {

  const [d, setValue] = useState(new Date());

  let weekday = d.getDay() == 0 ? 6 : d.getDay()-1
  let firstDayOfWeek = new Date(d.getFullYear(), d.getMonth(), d.getDate() - weekday); // Find the first day of the week
  const weekday_text = d.toLocaleString('uk-UA', {weekday: 'long'})
  const dateMonth = d.toLocaleString('uk-UA', {day: 'numeric', month: 'long',})

  const [domLoaded, setDomLoaded] = useState(false);
  const [currentDayLong, setCurrentDayLong] = useState(d.toLocaleString('uk-UA', {weekday: 'long'}).replace('ʼ',`'`));
  const [selectedDay, setSelectedDay] = useState(weekday);

  useEffect(() => {
    setDomLoaded(true);

    // const interval = setInterval(() =>  {
    //   setValue(new Date())
    //   console.log(d.getSeconds())
    // }, 1000);
    
    // return () => {
    //   clearInterval(interval);
    // };
  }, []);

  
    // function for switching the selected day. Called from a WeekItem component
  const changeDay = (selectedDay) => {

    let thisDay = new Date(firstDayOfWeek);
    thisDay.setDate(thisDay.getDate() + selectedDay);
    setCurrentDayLong(thisDay.toLocaleString('uk-UA', {weekday: 'long'}).replace('ʼ',`'`))
    setSelectedDay(selectedDay)
  }

  

  return ( 
    <>
    
      <Head>
        <title>TNTU Schedule</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        {/* <Script src="js/app.js"/> */}
    
      </Head>
      <header>
        <div className="header-container">
            <h3 className="logo">TNTU Schedule</h3>
            <div className="header-today">
                <p id="today-text"><b>{weekday_text}</b>, {dateMonth}</p>
            </div>
            <WeekItem d={d} changeDay={changeDay} />
            <div className='header-space'></div>
            <HButtons />
        </div>
    </header>
    <main>
        <div className="wrap">
            <div className="schedule">
            {// render the Schedule component only when the entire DOM is loaded. This is required for localStorage to work
            domLoaded && (
            <Schedule d={d} dayLong={currentDayLong} selectedDay={selectedDay} />
            )}

            </div>
        </div>
    </main>
    </>
  )
}
